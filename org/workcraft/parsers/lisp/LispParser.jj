/**
 * JavaCC file
 */
 
options {
  JDK_VERSION = "1.5";
}

PARSER_BEGIN(LispParser)
package org.workcraft.parsers.lisp;
import java.io.InputStream;
import java.util.List;
import java.util.LinkedList;
import java.io.BufferedReader;
import java.io.InputStreamReader;
 
public class LispParser {
	public static LispNode parse (InputStream is) throws ParseException {
		LispParser parser = new LispParser(new BufferedReader(new InputStreamReader(is)));
		return parser.listElement();
	}
}
PARSER_END(LispParser)

SKIP :
{
 	" "
|	"\r"
|	"\t"
|	"\n"
|	<";" (~["\r","\n"])*>
}

TOKEN :
{
	<OBR : "(" >
	|<CBR :")" > 
    |< VALUE: ( ~[" ","\r","\t","\n","(",")"] )+ >
}

List<LispNode> everything() : 
{
	LinkedList<LispNode> result = new LinkedList<LispNode>();
	LispNode o;
}
{
  ( o = listElement() {result.add(o);})*
  {
   return result;
  }
}

LispNode list() : 
{
	List<LispNode> result;
}
{
  <OBR> result = everything() <CBR>
  {
   return new LispNode(result);
  }
}

LispNode listElement() : { Token t; LispNode l;}
{
	t = <VALUE> { return new LispNode(t.image); } | l = list() { return l; } 
}
